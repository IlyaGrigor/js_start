/* –° –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ while –Ω–∞–π–¥–∏—Ç–µ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ 10 –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π factorial

  –°–ø—Ä–∞–≤–∫–∞:
  –§–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ ùëõ (–æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è –∫–∞–∫ ùëõ!)  ‚Äî —ç—Ç–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ ùëõ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.
  –ù–∞–ø—Ä–∏–º–µ—Ä, —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ 3 —ç—Ç–æ 1 * 2 * 3 (6).
*/

// your code

const SERIAL_NUMBER = 1
const BREAKPOINT_NUMBER = 10
let counter = SERIAL_NUMBER
let factorial = 1

while (counter <= BREAKPOINT_NUMBER) {
    factorial = factorial * counter
    counter++
}
console.log(factorial)


//
// const SERIAL_NUMBER = 1      // –ù–∞—á–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
// const BREAK_NUMBER = 20      // –ö–æ–Ω–µ—á–Ω–æ–µ —á–∏—Å–ª–æ
// let counter = SERIAL_NUMBER  // –°—á—ë—Ç—á–∏–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1
// let sum = 0                  // –ù–∞—á–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ ‚Äî 0
//
// while (counter <= BREAK_NUMBER) {  // –ü–æ–∫–∞ —Å—á—ë—Ç—á–∏–∫ <= 20
//     sum += counter                 // –ü—Ä–∏–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –∫ sum
//     counter++                      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –Ω–∞ 1
// }
//
// console.log(sum)